---
description: The enchantment Data Driven rules
globs: 
alwaysApply: false
---
# Data-Driven Enchantments for Minecraft 1.21.4

You are an expert in Minecraft's data-driven enchantment system introduced in 1.21. You provide concise, technical advice for creating custom enchantments in datapacks.

## Key Concepts

- **File Structure**: Enchantments are defined in JSON files at `data/<namespace>/enchantment/<name>.json` or in subdirectories like `data/<namespace>/enchantment/<subfolder ?>/<name>.json`.
- **Enchantment Tags Structure**: Enchantments are defined in JSON files at `data/<namespace>/tags/enchantment/<subfolder ?>/<name>.json` or in subdirectories like `data/<namespace>/enchantment/<item_type>/<name>.json`.
- **Item Tags Structure**: Enchantments are defined in JSON files at `data/<namespace>/tags/item/<subfolder ?>/<name>.json` or in subdirectories like `data/<namespace>/enchantment/<item_type>/<name>.json`.
- **Pack Format**: Use pack_format 61 for Minecraft 1.21.4 in your pack.mcmeta file.
- **Testing**: The `/reload` command doesn't reload the enchantment you need to restar world.
- **Organization**: Group enchantments by item type in separate folders for better organization.

## Best Practices
- **Organization**: Group enchantments by item type in folders (sword/, bow/, armor/, etc.)
- **Compatibility**: Use `exclusive_set` with tags to manage incompatible enchantments
- **Localization**: Always use translation keys with fallbacks for descriptions
- **Balance**: Test with different item types and enchantment levels
- **Performance**: Be cautious with `minecraft:tick` effects as they run every tick
- **UUIDs**: Use consistent and unique UUIDs for attributes
- **Scaling**: Carefully balance level-based values for game progression
- **Requirements**: Use detailed requirements to control when effects are applied
- **Documentation**: Keep a record of your enchantments for reference
- **Namespace**: Use a consistent namespace for your enchantments and tags

## JSON Structure

```json
{
  "description": {
    "translate": "enchantment.namespace.id",
    "fallback": "Enchantment Name"
  },
  "exclusive_set": "#namespace:exclusive_set/category",  // Tag for incompatible enchantments
  "supported_items": "#minecraft:enchantable/category",  // Items that can receive this enchantment
  "primary_items": "#minecraft:enchantable/specific",    // Optional: Items that can get it from enchanting table
  "weight": 10,                                          // 1-1024: Rarity (higher = more common)
  "max_level": 3,                                        // 1-255: Maximum enchantment level
  "min_cost": {                                          // Enchantment table minimum cost
    "base": 5,                                           // Base cost for level I
    "per_level_above_first": 8                           // Extra cost per level above I
  },
  "max_cost": {                                          // Enchantment table maximum cost
    "base": 50,
    "per_level_above_first": 10
  },
  "anvil_cost": 2,                                       // Base anvil enchantment cost
  "slots": ["mainhand", "offhand"],                      // Where enchantment is active
  "effects": {                                           // The actual functionality
    "effect_component_type": [
      {
        // effect definition
      }
    ]
  }
}
```

## Equipment Slots

Valid slot values:
- `"any"` - Active in any slot
- `"hand"` - Either hand
- `"mainhand"` - Main hand only
- `"offhand"` - Off hand only
- `"armor"` - Any armor slot
- `"feet"`, `"legs"`, `"chest"`, `"head"` - Specific armor slots
- `"body"` - All visual armor slots (not hands)

## Common Tags

### Item Tags
- `#minecraft:enchantable/weapon` - All weapons
- `#minecraft:enchantable/sword` - Only swords
- `#minecraft:enchantable/armor` - All armor pieces 
- `#minecraft:enchantable/foot_armor` - Boots
- `#minecraft:enchantable/mining` - Mining tools
- `#minecraft:enchantable/mining_loot` - Tools that can drop loot from blocks

### Exclusive Set Tags
Create tags to group incompatible enchantments:
```json
{
  "values": [
    "namespace:category/enchantment1",
    "namespace:category/enchantment2"
  ],
  "replace": false
}
```

## Effect Components

### Value Effect Components
Modify numerical values:

```json
"minecraft:damage": [
  {
    "effect": {
      "type": "minecraft:add",
      "value": {
        "type": "minecraft:linear",
        "base": 1.0,
        "per_level_above_first": 0.5
      }
    }
  }
]
```

Common value effect components:
- `minecraft:damage` - Modifies attack damage
- `minecraft:damage_protection` - Reduces damage taken (4% per point)
- `minecraft:item_damage` - Modifies durability loss
- `minecraft:knockback` - Modifies knockback strength
- `minecraft:fishing_luck_bonus` - Modifies fishing luck
- `minecraft:fishing_time_reduction` - Reduces fishing time
- `minecraft:projectile_spread` - Controls projectile spread
- `minecraft:projectile_count` - Number of projectiles fired

### Entity Effect Components
Apply effects to entities:

```json
"minecraft:post_attack": [
  {
    "affected": "victim",
    "effect": {
      "type": "minecraft:apply_mob_effect",
      "to_apply": "minecraft:poison",
      "min_duration": 2.5,
      "max_duration": {
        "type": "minecraft:linear",
        "base": 2.5,
        "per_level_above_first": 3.5
      },
      "min_amplifier": 0,
      "max_amplifier": {
        "type": "minecraft:linear",
        "base": 0,
        "per_level_above_first": 1
      }
    },
    "enchanted": "attacker",
    "requirements": {
      "condition": "minecraft:random_chance",
      "chance": {
        "type": "minecraft:enchantment_level",
        "amount": {
          "type": "minecraft:linear",
          "base": 0.15,
          "per_level_above_first": 0.15
        }
      }
    }
  }
]
```

Common entity effect components:
- `minecraft:post_attack` - Triggers after an attack
- `minecraft:hit_block` - Triggers when a projectile hits a block
- `minecraft:tick` - Runs each tick
- `minecraft:projectile_spawned` - Runs after spawning a projectile

### Location-Based Effect Components
Triggered when location changes:

```json
"minecraft:location_changed": [
  {
    "effect": {
      "type": "minecraft:frost_walker",
      "radius": {
        "type": "minecraft:linear",
        "base": 2.0,
        "per_level_above_first": 1.0
      }
    }
  }
]
```

### Attribute Components
Apply attribute modifiers:

```json
"minecraft:attributes": [
  {
    "attribute": "minecraft:block_interaction_range",
    "operation": "add_value",
    "amount": {
      "type": "minecraft:linear",
      "base": 1.0,
      "per_level_above_first": 1.0
    },
    "id": "namespace.enchantment.attribute_id"
  }
]
```

Common attributes:
- `minecraft:attack_damage` - Damage dealt
- `minecraft:attack_speed` - Attack speed
- `minecraft:movement_speed` - Movement speed
- `minecraft:block_interaction_range` - Reach distance
- `minecraft:safe_fall_distance` - Safe fall distance

### Other Effect Types
- `minecraft:damage_immunity` - Provides immunity to specific damage types
- `minecraft:prevent_equipment_drop` - Prevents item from dropping
- `minecraft:prevent_armor_change` - Prevents item from being unequipped

## Complex Effects with Requirements

Many effects can be conditional using requirements:

```json
"requirements": {
  "condition": "minecraft:all_of",
  "terms": [
    {
      "condition": "minecraft:entity_properties",
      "entity": "this",
      "predicate": {
        "type": "#minecraft:arrows"
      }
    },
    {
      "condition": "minecraft:inverted",
      "term": {
        "condition": "minecraft:location_check",
        "predicate": {
          "block": {
            "blocks": "#namespace:tag"
          }
        }
      }
    }
  ]
}
```

Common predicates:
- `minecraft:random_chance` - Random chance of effect
- `minecraft:entity_properties` - Entity properties check
- `minecraft:damage_source_properties` - Damage source check
- `minecraft:location_check` - Location check

## Level-Based Values
Scale effects with enchantment level:

```json
{
  "type": "minecraft:linear",
  "base": 1.0,
  "per_level_above_first": 0.5
}
```

Available types:
- `minecraft:constant` - Fixed value regardless of level
- `minecraft:linear` - Base value plus linear scaling
- `minecraft:levels_squared` - Scales with level squared
- `minecraft:clamped` - Clamps value between min/max
- `minecraft:fraction` - Fraction based on level
- `minecraft:lookup` - Custom value per level with fallback

```json
{
  "type": "lookup",
  "values": [0.165, 0.215, 0.245],
  "fallback": {
    "type": "minecraft:linear",
    "base": 0.185,
    "per_level_above_first": 0.03
  }
}
```

## Particle and Sound Effects

Many entity effects support particles and sounds:

```json
"effect": {
  "type": "minecraft:explode",
  "radius": 0.1,
  "offset": [0, 0.1, 0],
  "block_interaction": "none",
  "small_particle": {
    "type": "minecraft:white_smoke"
  },
  "large_particle": {
    "type": "minecraft:white_smoke"
  },
  "sound": "minecraft:entity.breeze.idle_air",
  "knockback_multiplier": 0.25,
  "create_fire": false
}
```

## In Predicat
if you want to use “enchantment_level_based_value_type” in predicates such as linear, levels_squared, lookup, fraction and clamped.
You must use “minecraft:enchantment_level”.

```json
{
  "type": "minecraft:enchantment_level",
  "amount": {
    "type": "minecraft:linear",
    "base": 0.1,
    "per_level_above_first": 0.05
  }
}
```

## Example Enchantments

### 1. Life Steal - Health Regeneration on Hit
```json
// data/mypack/enchantment/sword/life_steal.json
{
  "description": {
    "translate": "enchantment.mypack.life_steal",
    "fallback": "Life Steal"
  },
  "exclusive_set": "#mypack:exclusive_set/sword_effect",
  "supported_items": "#minecraft:enchantable/weapon",
  "primary_items": "#minecraft:enchantable/sword",
  "weight": 4,
  "max_level": 3,
  "min_cost": {
    "base": 5,
    "per_level_above_first": 15
  },
  "max_cost": {
    "base": 35,
    "per_level_above_first": 12
  },
  "anvil_cost": 2,
  "slots": ["mainhand"],
  "effects": {
    "minecraft:post_attack": [
      {
        "enchanted": "attacker",
        "affected": "attacker",
        "effect": {
          "type": "minecraft:apply_mob_effect",
          "to_apply": "minecraft:regeneration",
          "min_duration": 2.5,
          "max_duration": {
            "type": "minecraft:linear",
            "base": 2.5,
            "per_level_above_first": 3.5
          },
          "min_amplifier": 1,
          "max_amplifier": 1
        },
        "requirements": {
          "condition": "minecraft:random_chance",
          "chance": {
            "type": "minecraft:enchantment_level",
            "amount": {
              "type": "minecraft:linear",
              "base": 0.15,
              "per_level_above_first": 0.15
            }
          }
        }
      }
    ]
  }
}
```
